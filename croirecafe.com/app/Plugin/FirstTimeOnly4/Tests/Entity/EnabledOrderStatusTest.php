<?php
/**
 * This file is part of FirstTimeOnly4
 *
 * Copyright(c) Akira Kurozumi <info@a-zumi.net>
 *
 *  https://a-zumi.net
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Plugin\FirstTimeOnly4\Tests\Entity;


use Eccube\Entity\Master\OrderStatus;
use Eccube\Tests\EccubeTestCase;
use Plugin\FirstTimeOnly4\Entity\EnabledOrderStatus;
use Plugin\FirstTimeOnly4\Repository\EnabledOrderStatusRepository;

class EnabledOrderStatusTest extends EccubeTestCase
{
    /**
     * @var EnabledOrderStatusRepository
     */
    protected $enabledOrderStatusReppsitory;

    public function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->enabledOrderStatusReppsitory = $this->entityManager->getRepository(EnabledOrderStatus::class);
    }

    public function tearDown()
    {
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function test初期データチェック()
    {
        $enabledOrderStatuses = $this->enabledOrderStatusReppsitory->findAll();

        /** @var EnabledOrderStatus $enabledOrderStatus */
        foreach ($enabledOrderStatuses as $enabledOrderStatus) {
            if(
                $enabledOrderStatus->getOrderStatus()->getId() === OrderStatus::PROCESSING ||
                $enabledOrderStatus->getOrderStatus()->getId() === OrderStatus::PENDING
            ) {
                self::assertFalse($enabledOrderStatus->getEnabled());
            } else {
                self::assertTrue($enabledOrderStatus->getEnabled());
            }
        }
    }
}
