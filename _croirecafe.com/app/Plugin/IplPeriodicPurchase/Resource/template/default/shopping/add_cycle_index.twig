{#
RepeatCube for EC-CUBE4
Copyright(c) 2019 IPLOGIC CO.,LTD. All Rights Reserved.

http://www.iplogic.co.jp/

This program is not free software.
It applies to terms of service.
#}
<script>
$(function() {
    // 「お届け先を追加する」ボタンを非表示
    $(".ec-orderDelivery__edit").hide();

    $(".ec-orderPayment").first().after($('#periodic_cycle'));
    $("#periodic_cycle").after($("#periodic_shipping_date"));
    $("#periodic_shipping_date").after($("#periodic_shipping_deliv_calendar"));

    // 初期表示
    data = getSelectedCycle();
    if (data) {
        createDelivData(data);
    } else {
        createDelivData({});
    }

    $('button.ec-blockBtn--action').click(function (e) {
        if (!getSelectedCycle()) {
            alert('※ お届け頻度が選択されていません。');
            // function.jsから追加されるオーバーレイ用のdivを消す
            $('.bg-load-overlay').remove();

            // ヤマトのJSでform.submit()されるのを止める
            e.stopImmediatePropagation();

            return false;
        }
    });

    // イベントハンドラを先頭に移動(前述したヤマトのsubmitを止めるため)
    handlers = $._data($("button.ec-blockBtn--action").get(0), "events").click;
    handlers.unshift(handlers.pop());

    $('#checkShippingDate').click(function () {
        data = getSelectedCycle();

        if (!data) {
            alert('※ お届け頻度が選択されていません。');
            return;
        }

        createDelivData(data);
    });

    function getSelectedCycle() {
        isSelected = false;
        cycle_type = $('[id^=shopping_order_cycle_cycle_type_]:checked').val();
        cycle = [];

        if (cycle_type == {{ cycle_type_dayofweek }}) {
            isSelected = $("#shopping_order_cycle_cycle_dayofweek").val() !== '' 
                        && $("#shopping_order_cycle_cycle_week").val() !== '';

            cycle = {
                'cycle_day': $("#shopping_order_cycle_cycle_dayofweek").val(),
                'cycle_week': $("#shopping_order_cycle_cycle_week").val()
                    };
        } else {
            isSelected = $("#shopping_order_cycle_cycle_" + cycle_type).val() ? true : false;

            cycle = {'cycle_id': $("#shopping_order_cycle_cycle_" + cycle_type).val()};
        }

        if (!isSelected) {
            return false;
        }

        return cycle;
    }

    function createDelivData(data) {
        data.shipping_date = $("#shopping_order_Shippings_0_shipping_delivery_date").val();

        $.ajax({
            url: '{{ url('periodic_shopping_shipping_date') }}',
            type: 'POST',
            data: data,
            dataType: 'json',
        }).done(function(data) {
            if (data.shipping_date) {
                $("#first_shipping_date").text("初回の発送予定日は"+data.shipping_date+"です。");
                $("#second_shipping_date").text("2回目の発送予定日は"+data.next_shipping_date+"です。");
            }

            // カレンダー生成関数を呼ぶ
            generateDelivCalendar(data);

        }).fail(function(XMLHttpRequest, textStatus, errorThrown) {
            console.log("XMLHttpRequest : " + XMLHttpRequest.status);
            console.log("textStatus     : " + textStatus);
            console.log("errorThrown    : " + errorThrown.message);
            alert('{{ 'お届け日の確認処理でエラーが発生しました。'|trans }}');
        });
    }

    function generateDelivCalendar(data) {
        $('.deliv_calendar').empty();

        $('.deliv_calendar').append('<span style="color:#ffbf7f;">■</span>…本日<br />');
        $('.deliv_calendar').append('<span style="color:#ffff7f;">■</span>…初回発送予定日<br />');
        $('.deliv_calendar').append('<span style="color:#7fbfff;">■</span>…次回以降の発送予定日<br />');

        //loop
        for(var i in data.arrCalendar) {
            //loop
            for(var j in data.arrCalendar[i]) {
                //first
                if(j == 0) {
                    var table = $('<table>');
                    var caption = $('<caption>');
                    var thead = $('<thead>');
                    var tbody = $('<tbody>');

                    table.addClass('calendar');
                    caption.addClass('month');
                    caption.append(data.arrCalendar[i][j].year + '年' + data.arrCalendar[i][j].month + '月');
                    caption.appendTo(table);
                    thead.append('<tr><th>日</th><th>月</th><th>火</th><th>水</th><th>木</th><th>金</th><th>土</th></tr>');
                    thead.appendTo(table);
                }

                //first tr
                if(data.arrCalendar[i][j].first) {
                    var tr = $('<tr />');
                }

                var td = $('<td />');


                if(data.arrCalendar[i][j].in_month) {
                    //if first_deliv_day
                    if(data.arrCalendar[i][j].first_deliv_day) {
                        td.addClass('first_deliv');

                    //if deliv_day
                    }else if(data.arrCalendar[i][j].deliv_day) {
                        td.addClass('deliv');

                    //if holiday
                    }else if(data.arrCalendar[i][j].holiday) {
                        td.addClass('off');

                    //if today
                    }else if(data.arrCalendar[i][j].today) {
                        td.addClass('today');

                    }

                    td.append(data.arrCalendar[i][j].day);
                }

                td.appendTo(tr);
                tr.appendTo(tbody);

                //if last
                if(data.arrCalendar[i][j].last) {
                    //tableを追加
                    tbody.appendTo(table);
                    $('.deliv_calendar').append(table);
                }
            }
        }
    }

})
</script>

<style type="text/css">
@media screen and (max-width: 768px){
    .sp-view {
        width: 35%;
        padding-bottom: 10px;
    }
}

/* カレンダーのCSS */
.calendar{
    border: 1px solid #d3d3d3;
    text-align: center;
    width: 100%;
}
.calendar caption{
    font-size: 20px;
    margin:15px 0px;
    text-align: center;
}
.calendar th{
    padding: 5px;
    border: 1px solid #d3d3d3;
    text-align: center;
    background-color: #f0f0f0;
}
.calendar td{
    padding: 5px;
    border: 1px solid #d3d3d3;
}
.first_deliv{
    background-color: #ffff7f;
}
.deliv{
    background-color: #7fbfff;
}
.today {
    background-color: #ffbf7f;
}
.off {
    background-color: #ff9999;
}
</style>

<div class="ec-orderPayment" id="periodic_cycle">
    <div class="ec-rectHeading">
        <h2>{{ 'お届け頻度'|trans }}</h2>
    </div>
    <div class="ec-radio">
        <table>
        {% for key, child in form.cycle.cycle_type %}
            <tr>
                <td class="sp-view">
                    {{ form_widget(child) }}
                </td>
                {% set key_name = 'cycle_'~form.cycle.cycle_type.vars.choices[key].data %}
                {% if cycle_type_dayofweek != form.cycle.cycle_type.vars.choices[key].data %}
                    <td class="sp-view ec-select{{ has_errors(attribute(form.cycle, key_name)) ? ' error'}}">
                        {{ form_widget(attribute(form.cycle, key_name)) }}
                    </td>
                {% else %}
                    {# レンダリングの必要があるため #}
                    <div class="ec-select" style="display: none;">
                        {{ form_widget(attribute(form.cycle, key_name)) }}
                    </div>
                    <td class="sp-view ec-select{{ has_errors(attribute(form.cycle, key_name)) ? ' error'}}">
                        毎月
                        {{ form_widget(form.cycle.cycle_week) }}
                        {{ form_widget(form.cycle.cycle_dayofweek) }}
                        にお届け
                    </td>
                {% endif %}
            </tr>
        {% endfor %}
        </table>
    </div>

    <button type="button" class="ec-inlineBtn" id="checkShippingDate">お発送予定日を確認する</button>
</div>

<div class="ec-orderPayment" id="periodic_shipping_date">
    <div class="ec-rectHeading">
        <h2>{{ '発送予定日の確認'|trans }}</h2>
    </div>
    <div class="ec-input">
        <p id="first_shipping_date">初回のお発送予定日はです。</p>
        <p id="second_shipping_date">2回目の発送予定日はです。</p>
        <p>※土日祝日の場合は前営業日となります。</p>
    </div>
</div>

<div class="ec-orderPayment" id="periodic_shipping_deliv_calendar">
    <div class="ec-rectHeading">
        <h2>{{ '直近3ヶ月の発送予定日'|trans }}</h2>
    </div>
    <div class="deliv_calendar">
    </div>
</div>
